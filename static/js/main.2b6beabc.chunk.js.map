{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","shortid","require","FeedbackOptions","options","onLeaveFeedback","map","option","name","className","type","onClick","generate","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","prev","positiveFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAkBeA,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,OACZ,+BACE,uDACCC,IAAuBA,IAAuB,KAFjD,WCPAC,G,MAAUC,EAAQ,KAqBTC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBACEC,KAAMD,EACNE,UAAU,MACVC,KAAK,SACLC,QAASN,EAJX,SAMGE,GADIN,EAAQW,kBCJVC,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIN,UAAU,aAAd,SAA4BK,IAC3BC,OCAQC,G,MAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,MCIE,SAASC,IACtB,IACA,EAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAkBMC,EAAqB,WACzB,IAAMxB,EAAQH,EAAOC,EAAUC,EAC/B,OAAKC,GACI,GAUX,OACE,sBAAKU,UAAU,YAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBV,QArCP,CAAC,OAAQ,UAAW,OAqCKC,gBAhCnB,SAACmB,GACrB,OAAQA,EAAMC,OAAOjB,MACnB,IAAK,OACHY,GAAQ,SAACM,GAAD,OAAUA,EAAO,KACzB,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAUA,EAAO,KAC5B,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAUA,EAAO,KACxB,MACF,QACE,aAuBF,cAAC,EAAD,CAASZ,MAAM,YAAf,SACGS,IACC,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,EACPvB,mBAlB8B,WACtC,IAAM2B,EAAmBC,KAAKC,MAAOjC,GAAQA,EAAOE,EAAMD,GAAY,KACtE,OAAO+B,KAAKC,MAAMF,MAmBZ,cAAC,EAAD,CAAcV,QAAQ,2BCrDhCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACE,cAACd,EAAD,QAGJe,SAASC,eAAe,W","file":"static/js/main.2b6beabc.chunk.js","sourcesContent":["import React from 'react';\nimport './Statistics.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total()}</li>\n      <li>\n        <span>Positive feedback: </span>\n        {positivePercentage() ? positivePercentage() : ' 0'}%\n      </li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport \"./FeedbackOptions.css\";\n\nconst shortid = require(\"shortid\");\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => {\n        return (\n          <button\n            name={option}\n            className='btn'\n            type='button'\n            onClick={onLeaveFeedback}\n            key={shortid.generate()}>\n            {option}\n          </button>\n        );\n      })}\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import './Section.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1 className=\"main-title\">{title}</h1>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n","import './Notification.css';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const buttons = [\"good\", \"neutral\", \"bad\"];\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = (event) => {\n    switch (event.target.name) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    if (!total) {\n      return 0;\n    }\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positiveFeedback = Math.round((good / (good + bad + neutral)) * 100);\n    return Math.round(positiveFeedback);\n  };\n\n  return (\n    <div className='contaiter'>\n      <Section title='Please leave feedback'>\n        <FeedbackOptions options={buttons} onLeaveFeedback={leaveFeedback} />\n      </Section>\n\n      <Section title='Statistic'>\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message='No feedback given' />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}